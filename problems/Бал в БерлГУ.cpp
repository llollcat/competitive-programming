/*ограничение по времени на тест
1 секунда
ограничение по памяти на тест
256 мегабайт
ввод
стандартный ввод
вывод
стандартный вывод

По случаю 100500-летия Берляндского государственного университета совсем скоро состоится бал! Уже n юношей и m девушек во всю репетируют вальс, менуэт, полонез и кадриль.

Известно, что на бал будут приглашены несколько пар юноша-девушка, причем уровень умений танцевать партнеров в каждой паре должен отличаться не более чем на единицу.

Для каждого юноши известен уровень его умения танцевать. Аналогично, для каждой девушки известен уровень ее умения танцевать. Напишите программу, которая определит наибольшее количество пар, которое можно образовать из n юношей и m девушек.
Входные данные

В первой строке записано целое число n (1 ≤ n ≤ 100) — количество юношей. Вторая строка содержит последовательность a1, a2, ..., an (1 ≤ ai ≤ 100), где ai — умение танцевать i-го юноши.

Аналогично, третья строка содержит целое m (1 ≤ m ≤ 100) – количество девушек. В четвертой строке содержится последовательность b1, b2, ..., bm (1 ≤ bj ≤ 100), где bj — умение танцевать j-й девушки.
Выходные данные

Выведите единственное число — искомое максимальное возможное количество пар.
Примеры
Входные данные
Скопировать

4
1 4 6 2
5
5 1 5 7 9

Выходные данные
Скопировать

3

Входные данные
Скопировать

4
1 2 3 4
4
10 11 12 13

Выходные данные
Скопировать

0

Входные данные
Скопировать

5
1 1 1 1 1
3
1 2 3

Выходные данные
Скопировать

2*/



#include <bits/stdc++.h>

using namespace std;


int main() {

    int man[100];
    int woman[100];

    int n; cin >> n;

    for (int i=0; i<n; ++i){
        cin >> man[i];
    }


    int m; cin >> m;

    for (int i=0; i<m; ++i){
            cin >> woman[i];
    }

    stable_sort(man, man+n);
    stable_sort(woman, woman+m);

    int out=0;
    int p1=0;
    int p2=0;
    while ((p1<n)&&(p2<m)){
        if (abs(man[p1]-woman[p2])<=1){
            ++out;


            ++p2;
            ++p1;
        }else {
            if (man[p1] >= woman[p2])
                ++p2;
            else
                ++p1;
        }



    }

    cout << out;

    return 0;
}
